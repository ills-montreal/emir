experiment_name: 'NTXent_tiny_20hidden'

num_epochs: 1000
batch_size: 500

log_iterations: 30
patience: 35
loss_func: NTXent
loss_params:
  tau: 0.1
num_train: 500

required_data:
  - dgl_graph
  - pytorch_geometric_graph
metrics:
  - positive_similarity
  - negative_similarity
  - contrastive_accuracy
  - true_negative_rate
  - true_positive_rate
  - uniformity
  - alignment
  - batch_variance
  - dimension_covariance
main_metric: loss
collate_function: pytorch_geometric_contrastive_collate

optimizer: Adam
optimizer_params:
  lr: 8.0e-5
  weight_decay: 5.0e-7


scheduler_step_per_batch: False
lr_scheduler: WarmUpWrapper
lr_scheduler_params:
  warmup_steps: [700]
  # parameters of scheduler to run after warmup
  wrapped_scheduler: ReduceLROnPlateau
  cooldown: 20
  factor: 0.6
  patience: 25
  min_lr: 1.0e-6
  threshold: 1.0e-4
  mode: 'min'
  verbose: True



# Model parameters
model_type: 'PNA'
model_parameters:
  target_dim: 256
  hidden_dim: 200
  mid_batch_norm: True
  last_batch_norm: True
  readout_batchnorm: True
  # e^(log(forgetfulness ~0.001)/number of steps per epoch) = batch_norm_momentum   =>  e^(log(0.001)/100) = 0.970
  batch_norm_momentum: 0.96
  readout_hidden_dim: 200
  readout_layers: 2
  dropout: 0.0
  propagation_depth: 7
  aggregators:
    - mean
    - max
    - min
    - std
  scalers:
    - identity
    - amplification
    - attenuation
  readout_aggregators:
    - min
    - max
    - mean
  pretrans_layers: 2
  posttrans_layers: 1
  residual: True

model3d_type: 'SMP'
model3d_parameters:
  target_dim: 256
  hidden_dim: 128
  energy_and_force: False
  output_init: zeros # in DimeNet++, for QM9, 'zeros' for mu, homo, lumo, and zpve; 'GlorotOrthogonal' for alpha, R2, U0, U, H, G, and Cv
  num_spherical: 7
  num_radial: 6
  out_emb_size: 256
  basis_emb_size: 8
  int_emb_size: 64
  propagation_depth: 4
  hidden_channels: 128
  cutoff: 5.0





# continue training from checkpoint:
#checkpoint: runs/PNAReadout_2_layer_03-04_15-29-07/last_checkpoint.pt